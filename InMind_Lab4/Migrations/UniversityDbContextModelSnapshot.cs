// <auto-generated />
using System;
using InMind_Lab4.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InMind_Lab4.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    partial class UniversityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InMind_Lab4.Model.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ClassId")
                        .HasName("class_pk");

                    b.ToTable("Class", (string)null);

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            Location = "Room 101",
                            Name = "Math 101"
                        },
                        new
                        {
                            ClassId = 2,
                            Location = "Room 102",
                            Name = "Science 102"
                        },
                        new
                        {
                            ClassId = 3,
                            Location = "Room 201",
                            Name = "History 201"
                        },
                        new
                        {
                            ClassId = 4,
                            Location = "Room 202",
                            Name = "Art 202"
                        },
                        new
                        {
                            ClassId = 5,
                            Location = "Room 301",
                            Name = "Music 301"
                        });
                });

            modelBuilder.Entity("InMind_Lab4.Model.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("CourseId")
                        .HasName("course_pk");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Course", (string)null);

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            ClassId = 1,
                            Description = "Basic Algebra Course",
                            TeacherId = 1,
                            Title = "Algebra"
                        },
                        new
                        {
                            CourseId = 2,
                            ClassId = 2,
                            Description = "Introduction to Physics",
                            TeacherId = 2,
                            Title = "Physics"
                        },
                        new
                        {
                            CourseId = 3,
                            ClassId = 3,
                            Description = "History of the World",
                            TeacherId = 3,
                            Title = "World History"
                        },
                        new
                        {
                            CourseId = 4,
                            ClassId = 4,
                            Description = "Basics of Painting",
                            TeacherId = 4,
                            Title = "Painting"
                        },
                        new
                        {
                            CourseId = 5,
                            ClassId = 5,
                            Description = "Introduction to Piano",
                            TeacherId = 5,
                            Title = "Piano"
                        });
                });

            modelBuilder.Entity("InMind_Lab4.Model.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int?>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("EnrollmentId")
                        .HasName("enrollment_pk");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment", (string)null);

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 4,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 5,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 6,
                            CourseId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 7,
                            CourseId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 8,
                            CourseId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 9,
                            CourseId = 5,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("InMind_Lab4.Model.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("StudentId")
                        .HasName("student_pk");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateOnly(2000, 5, 15),
                            FirstName = "Michael",
                            LastName = "Jordan"
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateOnly(1999, 3, 22),
                            FirstName = "Sarah",
                            LastName = "Connor"
                        },
                        new
                        {
                            StudentId = 3,
                            DateOfBirth = new DateOnly(2001, 7, 11),
                            FirstName = "David",
                            LastName = "Beckham"
                        },
                        new
                        {
                            StudentId = 4,
                            DateOfBirth = new DateOnly(2002, 1, 5),
                            FirstName = "Emma",
                            LastName = "Watson"
                        },
                        new
                        {
                            StudentId = 5,
                            DateOfBirth = new DateOnly(1998, 11, 30),
                            FirstName = "James",
                            LastName = "Bond"
                        });
                });

            modelBuilder.Entity("InMind_Lab4.Model.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TeacherId")
                        .HasName("teacher_pk");

                    b.ToTable("Teacher", (string)null);

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Department = "Mathematics",
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            TeacherId = 2,
                            Department = "Science",
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            TeacherId = 3,
                            Department = "History",
                            FirstName = "Alice",
                            LastName = "Johnson"
                        },
                        new
                        {
                            TeacherId = 4,
                            Department = "Art",
                            FirstName = "Bob",
                            LastName = "Brown"
                        },
                        new
                        {
                            TeacherId = 5,
                            Department = "Music",
                            FirstName = "Charlie",
                            LastName = "Davis"
                        });
                });

            modelBuilder.Entity("InMind_Lab4.Model.Course", b =>
                {
                    b.HasOne("InMind_Lab4.Model.Class", "Class")
                        .WithMany("Courses")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("course_course_courseid_fk");

                    b.HasOne("InMind_Lab4.Model.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("course_teacher_teacherid_fk");

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("InMind_Lab4.Model.Enrollment", b =>
                {
                    b.HasOne("InMind_Lab4.Model.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("enrollment_course_courseid_fk");

                    b.HasOne("InMind_Lab4.Model.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("enrollment_student_studentid_fk");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("InMind_Lab4.Model.Class", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("InMind_Lab4.Model.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("InMind_Lab4.Model.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("InMind_Lab4.Model.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
